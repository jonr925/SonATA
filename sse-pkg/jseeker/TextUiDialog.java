/*******************************************************************************

 File:    TextUiDialog.java
 Project: OpenSonATA
 Authors: The OpenSonATA code is the result of many programmers
          over many years

 Copyright 2011 The SETI Institute

 OpenSonATA is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.
 
 OpenSonATA is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.
 
 You should have received a copy of the GNU General Public License
 along with OpenSonATA.  If not, see<http://www.gnu.org/licenses/>.
 
 Implementers of this code are requested to include the caption
 "Licensed through SETI" with a link to setiQuest.org.
 
 For alternate licensing arrangements, please contact
 The SETI Institute at www.seti.org or setiquest.org. 

*******************************************************************************/

package opensonata.dataDisplays;

import javax.swing.*;
import javax.swing.text.*;

/*
 * TextUiDialog.java
 * Created on July 5, 2001, 11:03 AM
 */

/**
 *
 */

public class TextUiDialog extends javax.swing.JDialog {

    private class SeekerCmdLineWrapper extends RunExecWrapper 
    {
	SeekerCmdLineWrapper(JTextArea feedbackArea)
	{
	    super("seeker", feedbackArea);
	}

	public void sendCommand(String cmd)
	{
	    // send cmd on to program
	    // for tcl, need to use 'puts' to echo back the results

	    String tclCmd = "puts [" + cmd + "]";
	    
	    super.sendCommand(tclCmd);

	    if (cmd.equals("quit") || cmd.equals("exit")) 
	    {
		System.exit(0);
	    }
	    
	}
	
    }


            /** Creates new form TextUiDialog */
            public TextUiDialog(java.awt.Frame parent, boolean modal) {
                super(parent, modal);
                initComponents();

                seekerCmdLineWrapper = 
                    //new RunExecWrapper("seeker", jTextAreaSeekerFeedback);
		    new SeekerCmdLineWrapper(jTextAreaSeekerFeedback);
            }
            
            // send on a seeker UI command
            public void sendCommand(String cmd)
            {
                seekerCmdLineWrapper.sendCommand(cmd);
            }
            
            /** This method is called from within the constructor to
             * initialize the form.
             * WARNING: Do NOT modify this code. The content of this method is
             * always regenerated by the Form Editor.
             */
            private void initComponents() {//GEN-BEGIN:initComponents
                jScrollPane1 = new javax.swing.JScrollPane();
                jTextAreaSeekerFeedback = new javax.swing.JTextArea();
                jTextFieldSeekerCmd = new javax.swing.JTextField();
                jButtonClose = new javax.swing.JButton();
                jLabel1 = new javax.swing.JLabel();
                jLabel2 = new javax.swing.JLabel();
                jButtonHelp = new javax.swing.JButton();
                
                getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
                
                setTitle("jseeker Text UI");
                addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent evt) {
                        closeDialog(evt);
                    }
                });
                
                jScrollPane1.setVerticalScrollBarPolicy(javax.swing.JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
                jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
                jTextAreaSeekerFeedback.setLineWrap(true);
                jTextAreaSeekerFeedback.setEditable(false);
                jTextAreaSeekerFeedback.setColumns(70);
                jTextAreaSeekerFeedback.setRows(40);
                jScrollPane1.setViewportView(jTextAreaSeekerFeedback);
                
                getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(36, 68, 760, 440));
                
                jTextFieldSeekerCmd.setColumns(70);
                jTextFieldSeekerCmd.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        seekerCmdEntered(evt);
                    }
                });
                
                getContentPane().add(jTextFieldSeekerCmd, new org.netbeans.lib.awtextra.AbsoluteConstraints(36, 558, 760, 20));
                
                jButtonClose.setText("Close");
                jButtonClose.addMouseListener(new java.awt.event.MouseAdapter() {
                    public void mousePressed(java.awt.event.MouseEvent evt) {
                        jButtonCloseMousePressed(evt);
                    }
                });
                
                getContentPane().add(jButtonClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 605, -1, -1));
                
                jLabel1.setText("Enter Command:");
                getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(36, 528, -1, -1));
                
                jLabel2.setText("Seeker Text UI:");
                getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(36, 38, 170, 20));
                
                jButtonHelp.setText("Help");
                jButtonHelp.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        jButtonHelpActionPerformed(evt);
                    }
                });
                
                getContentPane().add(jButtonHelp, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 605, -1, -1));
                
                pack();
            }//GEN-END:initComponents

            private void jButtonHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonHelpActionPerformed
                // Add your handling code here:
                seekerCmdLineWrapper.sendCommand("help");
            }//GEN-LAST:event_jButtonHelpActionPerformed

            private void seekerCmdEntered(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seekerCmdEntered
                String text = jTextFieldSeekerCmd.getText();
                seekerCmdLineWrapper.sendCommand(text);
                jTextFieldSeekerCmd.selectAll();
            }//GEN-LAST:event_seekerCmdEntered

    private void jButtonCloseMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonCloseMousePressed
        this.hide();        // Add your handling code here:
    }//GEN-LAST:event_jButtonCloseMousePressed

    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        new TextUiDialog(new javax.swing.JFrame(), true).show();
    }
    
    
    private RunExecWrapper seekerCmdLineWrapper;
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaSeekerFeedback;
    private javax.swing.JTextField jTextFieldSeekerCmd;
    private javax.swing.JButton jButtonClose;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton jButtonHelp;
    // End of variables declaration//GEN-END:variables

}
